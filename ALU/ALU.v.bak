module ALU16bit (operandA, operandB, opcode, result);

	input [15:0] operandA, operandB;
	input [3:0] opcode;
	output reg [15:0] result;

	always @(*) 
	begin
	
	  case (opcode)
			4'b0001: result = operandB;              // MOV
			4'b0010: result = operandA + operandB;   // ADD
			4'b0011: result = operandA - operandB;   // SUB
			4'b0100: result = operandA & operandB;   // AND
			4'b0101: result = operandA | operandB;   // OR
	  endcase
	  
	end

endmodule
