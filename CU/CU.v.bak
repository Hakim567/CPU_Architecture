module ControlUnit(opcode, ram_write, ram_read, alu_enable);

	input [3:0] opcode,
	
	output reg ram_write, ram_read, alu_enable;
	output reg [3:0] alu_op;

	always @(*) begin
		ram_write = 0;
		ram_read = 0;
		alu_enable = 0;
		alu_op = 4'b0000;

		case(opcode)
			4'b0001: 
			begin // MOV
				ram_write = 1;
				ram_read = 1;
			end
			
			4'b0010: 
			begin // ADD
				alu_enable = 1;
				alu_op = 4'b0001;
				ram_read = 1;
			end
			
			4'b0011: 
			begin // SUB
				alu_enable = 1;
				alu_op = 4'b0010;
				ram_read = 1;
			end
			
			4'b0100: 
			begin // AND
				alu_enable = 1;
				alu_op = 4'b0011;
				ram_read = 1;
			end
			
			4'b0101: 
			begin // OR
				 alu_enable = 1;
				 alu_op = 4'b0100;
				 ram_read = 1;
			end
			
			default: 
			begin
				 ram_write = 0;
				 ram_read = 0;
				 alu_enable = 0;
				 alu_op = 4'b0000;
			end
			
		endcase
	end

endmodule
